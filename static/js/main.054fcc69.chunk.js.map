{"version":3,"sources":["components/Contacts/Contacts.module.css","components/Section/Section.module.css","components/Section/Section.js","redux/selectors.js","redux/actions.js","components/ContactForm/Form.js","components/Contacts/Contacts.js","components/Filter/Filter.js","App.js","redux/reducers.js","redux/store.js","index.js","components/ContactForm/Form.module.css"],"names":["module","exports","Section","title","children","className","S","section","getContacts","state","contacts","items","getFilter","filter","getVisibleContacts","normalizedFilter","toLowerCase","name","includes","addContact","createAction","number","payload","id","shortid","generate","deleteContact","changeFilter","ContactForm","useSelector","dispatch","useDispatch","useState","setName","setNumber","handleChange","e","target","value","onSubmit","preventDefault","find","contact","chekName","alert","chekNumber","trim","form","label","type","placeholder","onChange","input","button","Contacts","map","container","onClick","actions","onDeleteContact","Filter","App","initialContactList","createReducer","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","phonebookPersistConfig","key","storage","blacklist","store","configureStore","reducer","persistReducer","reducers","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.054fcc69.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Contacts_container__zmNvE\",\"name\":\"Contacts_name__m4DKK\",\"button\":\"Contacts_button__3yS4d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__NnUUa\"};","import PropTypes from \"prop-types\";\nimport S from \"./Section.module.css\";\nconst Section = ({ title, children }) => (\n  <div className={S.section}>\n    <h2 className={S.title}>{title}</h2>\n    {children}\n  </div>\n);\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n};\n\nexport default Section;\n","export const getContacts = (state) => state.contacts.items;\r\nexport const getFilter = (state) => state.contacts.filter;\r\n\r\nexport const getVisibleContacts = (state) => {\r\n  const contacts = getContacts(state);\r\n  const filter = getFilter(state);\r\n  const normalizedFilter = filter.toLowerCase();\r\n\r\n  return contacts.filter(({ name }) =>\r\n    name.toLowerCase().includes(normalizedFilter)\r\n  );\r\n};\r\n","import { createAction } from \"@reduxjs/toolkit\";\r\nimport shortid from \"shortid\";\r\n\r\nexport const addContact = createAction(\"phonebook/add\", (name, number) => ({\r\n  payload: {\r\n    id: shortid.generate(),\r\n    name,\r\n    number,\r\n  },\r\n}));\r\n\r\nexport const deleteContact = createAction(\"phonebook/delete\");\r\nexport const changeFilter = createAction(\"phonebook/changeFilter\");\r\n","import { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getContacts } from \"../../redux/selectors\";\nimport { addContact } from \"../../redux/actions\";\nimport S from \"./Form.module.css\";\n\nexport default function ContactForm() {\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n  const onSubmit = (name, number) => dispatch(addContact(name, number));\n\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    switch (name) {\n      case \"name\":\n        setName(value);\n        break;\n      case \"number\":\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const chekName = (name) => {\n    return contacts.find(\n      (contact) => contact.name.toLowerCase() === name.toLowerCase()\n    );\n  };\n\n  const chekNumber = (number) => {\n    return contacts.find((contact) => contact.number === number);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (chekName(name)) {\n      alert(`${name} is already added.`);\n    } else if (chekNumber(number)) {\n      alert(`${number} is already added.`);\n    } else if (name.trim() === \"\" || number.trim() === \"\") {\n      alert(\"All of inputs must be not empty\");\n    } else {\n      onSubmit(name, number);\n    }\n    setName(\"\");\n    setNumber(\"\");\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className={S.form}>\n      <label className={S.label}>\n        Name\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          placeholder=\"\"\n          onChange={handleChange}\n          className={S.input}\n        />\n      </label>\n      <label className={S.label}>\n        Number\n        <input\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          placeholder=\"\"\n          onChange={handleChange}\n          className={S.input}\n        />\n      </label>\n\n      {\n        <button type=\"submit\" className={S.button}>\n          Add contact\n        </button>\n      }\n    </form>\n  );\n}\n","import { useSelector, useDispatch } from \"react-redux\";\nimport * as actions from \"../../redux/actions\";\nimport { getVisibleContacts } from \"../../redux/selectors\";\nimport S from \"./Contacts.module.css\";\n\nfunction Contacts() {\n  const contacts = useSelector(getVisibleContacts);\n  const dispatch = useDispatch();\n  const onDeleteContact = (id) => dispatch(actions.deleteContact(id));\n\n  return (\n    <ul>\n      {contacts.map(({ id, name, number }) => (\n        <li key={id} className={S.container}>\n          <p className={S.name}>\n            {name}: {number}{\" \"}\n          </p>\n          {\n            <button\n              className={S.button}\n              type=\"button\"\n              onClick={() => onDeleteContact(id)}\n            >\n              Удалить\n            </button>\n          }\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nexport default Contacts;\n","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getFilter } from \"../../redux/selectors\";\nimport * as actions from \"../../redux/actions\";\n\nexport default function Filter() {\n  const value = useSelector(getFilter);\n  const dispatch = useDispatch();\n  const onChange = (e) => dispatch(actions.changeFilter(e.target.value));\n\n  return (\n    <label>\n      Find contacts by name{\" \"}\n      <input type=\"text\" value={value} onChange={onChange} />\n    </label>\n  );\n}\n","import Section from \"./components/Section\";\nimport ContactForm from \"./components/ContactForm\";\nimport Contacts from \"./components/Contacts/Contacts\";\nimport Filter from \"./components/Filter\";\n\nexport default function App() {\n  return (\n    <>\n      <Section title=\"Phonebook\">\n        <ContactForm />\n      </Section>\n      <Section title=\"Contacts\">\n        <Filter />\n        <Contacts />\n      </Section>\n    </>\n  );\n}\n","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport { addContact, deleteContact, changeFilter } from \"./actions\";\r\nimport listOfContact from \"../data/contacts.json\";\r\n\r\nconst initialContactList = listOfContact;\r\n\r\nconst items = createReducer(initialContactList, {\r\n  [addContact]: (state, { payload }) => [...state, payload],\r\n  [deleteContact]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst filter = createReducer(\"\", {\r\n  [changeFilter]: (state, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n});\r\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\r\nimport logger from \"redux-logger\";\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\nimport reducers from \"./reducers\";\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\n\r\nconst phonebookPersistConfig = {\r\n  key: \"contacts\",\r\n  storage,\r\n  blacklist: [\"filter\"],\r\n};\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    contacts: persistReducer(phonebookPersistConfig, reducers),\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === \"development\",\r\n});\r\n\r\nexport const persistor = persistStore(store);\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport { store, persistor } from \"./redux/store\";\n\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__58y7j\",\"label\":\"Form_label__PnCmb\",\"input\":\"Form_input__2Dpfe\",\"button\":\"Form_button__30CNU\"};"],"sourceRoot":""}